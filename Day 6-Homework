ProductContext.js
import React, { createContext, useState, useEffect } from 'react';

const ProductContext = createContext();

const ProductProvider = ({ children }) => {
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [priceRange, setPriceRange] = useState({ min: 0, max: 100 });

  // Fetch categories asynchronously
  useEffect(() => {
    // Simulate fetching categories from an API endpoint
    const fetchCategories = async () => {
      try {
        // Replace this with your actual API endpoint
        const response = await fetch('https://api.example.com/categories');
        const data = await response.json();
        setCategories(data);
      } catch (error) {
        console.error('Error fetching categories:', error);
      }
    };

    fetchCategories();
  }, []);

  const updateSelectedCategory = (category) => {
    setSelectedCategory(category);
  };

  const updatePriceRange = (min, max) => {
    setPriceRange({ min, max });
  };

  const contextValue = {
    categories,
    selectedCategory,
    priceRange,
    updateSelectedCategory,
    updatePriceRange,
  };

  return (
    <ProductContext.Provider value={contextValue}>
      {children}
    </ProductContext.Provider>
  );
};

export { ProductProvider, ProductContext };


App.js
import React from 'react';
import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';
import { ProductProvider } from './ProductContext';

import HomePage from './pages/HomePage';
import ProductsPage from './pages/ProductsPage';

function App() {
  return (
    <ProductProvider>
      <Router>
        <Switch>
          <Route path="/" exact component={HomePage} />
          <Route path="/products" component={ProductsPage} />
        </Switch>
      </Router>
    </ProductProvider>
  );
}

export default App;


HomePage.js
import React from 'react';

const HomePage = () => {
  return (
    <div>
      <h1>Home Page</h1>
      {/* Add your home page content here */}
    </div>
  );
};

export default HomePage;


ProductsPage.js
import React, { useContext } from 'react';
import { ProductContext } from '../ProductContext';

const ProductsPage = () => {
  const { categories, selectedCategory, priceRange, updateSelectedCategory, updatePriceRange } = useContext(
    ProductContext
  );

  const handleCategoryChange = (category) => {
    updateSelectedCategory(category);
  };

  const handlePriceRangeChange = (event) => {
    const { name, value } = event.target;
    updatePriceRange({
      ...priceRange,
      [name]: parseFloat(value),
    });
  };

  return (
    <div>
      <h1>Products Page</h1>
      <div>
        <h2>Filter by Category:</h2>
        <select value={selectedCategory} onChange={(e) => handleCategoryChange(e.target.value)}>
          <option value="">All Categories</option>
          {categories.map((category) => (
            <option key={category} value={category}>
              {category}
            </option>
          ))}
        </select>
      </div>
      <div>
        <h2>Filter by Price Range:</h2>
        <label>
          Min Price:
          <input
            type="number"
            name="min"
            value={priceRange.min}
            onChange={handlePriceRangeChange}
          />
        </label>
        <label>
          Max Price:
          <input
            type="number"
            name="max"
            value={priceRange.max}
            onChange={handlePriceRangeChange}
          />
        </label>
      </div>
      {/* Add your product list based on the selected category and price range */}
    </div>
  );
};

export default ProductsPage;
